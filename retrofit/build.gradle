apply plugin: 'java-library'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'com.vanniktech.maven.publish'

def addMultiReleaseSourceSet(int version) {
  def sourceSet = sourceSets.create("java$version")
  sourceSet.java.srcDir("src/main/java$version")

  // Propagate dependencies to be visible to this version's source set.
  configurations.getByName("java${version}Implementation").extendsFrom(configurations.getByName('implementation'))
  configurations.getByName("java${version}Api").extendsFrom(configurations.getByName('api'))
  configurations.getByName("java${version}CompileOnly").extendsFrom(configurations.getByName('compileOnly'))

  // Allow types in the main source set to be visible to this version's source set.
  dependencies.add("java${version}Implementation", sourceSets.getByName("main").output)

  tasks.named("compileJava${version}Java", JavaCompile) {
    javaCompiler = javaToolchains.compilerFor {
      languageVersion = JavaLanguageVersion.of(version)
      vendor = JvmVendorSpec.AZUL
    }
  }

  tasks.named('jar', Jar) {
    from(sourceSet.output) {
      into("META-INF/versions/$version")
    }
  }
}

addMultiReleaseSourceSet(14)
addMultiReleaseSourceSet(16)

dependencies {
  api libs.okhttp.client

  compileOnly libs.android
  compileOnly libs.kotlin.stdLib
  compileOnly libs.kotlinx.coroutines

  compileOnly libs.animalSnifferAnnotations
  compileOnly libs.findBugsAnnotations
}
plugins {
  id 'edu.illinois.nondexGradle' version '2.1.7'
}

javadoc {
  exclude('retrofit2/internal/**')
}

jar {
  manifest {
    attributes 'Automatic-Module-Name': 'retrofit2'
    attributes 'Multi-Release': 'true'
  }
}
